package com.pwc.controller;

import java.util.ArrayList;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RequestBody;

import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;
import com.wordnik.swagger.annotations.ApiParam;
import com.wordnik.swagger.annotations.ApiResponse;
import com.wordnik.swagger.annotations.ApiResponses;


import com.pwc.domain.core.Check_List_Maintenance_Master;

import com.pwc.service.Check_List_Maintenance_Master_Default_ActivityService;



/**
 * 
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p> 
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/

@Api(value = "/Check_List_Maintenance_Master_Default_Activity", description = "Check_List_Maintenance_Master_Default_Activity of Check_List_Maintenance_Master_Default_Activity", 
produces = "application/json")

@Controller("Check_List_Maintenance_Master_Default_ActivityController")
@RequestMapping("/Check_List_Maintenance_Master_Default_Activity")
public class Check_List_Maintenance_Master_Default_ActivityController extends GpBaseController {


	Check_List_Maintenance_Master_Default_ActivityService Check_List_Maintenance_Master_Default_Activity_service;


	public Check_List_Maintenance_Master_Default_ActivityService get_Check_List_Maintenance_Master_Default_Activity_service() {
		return Check_List_Maintenance_Master_Default_Activity_service;
	}


	@Resource(name="Check_List_Maintenance_Master_Default_ActivityService")
	public void set_Check_List_Maintenance_Master_Default_Activity_service(Check_List_Maintenance_Master_Default_ActivityService Check_List_Maintenance_Master_Default_Activity_service) {
		this.Check_List_Maintenance_Master_Default_Activity_service = Check_List_Maintenance_Master_Default_Activity_service;
	}




	//auths not ready at this time


	@ApiOperation(value = "/create_Check_List_Maintenance_Master", httpMethod = "POST",
	notes = "creates a noun of Check_List_Maintenance_Master", 
	response = Check_List_Maintenance_Master.class)
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The request was fulfilled"),
	    @ApiResponse(code = 404, message = "The server has not found anything matching the URI given"),
	    @ApiResponse(code = 500, message = "Internal server error due to encoding the data"),
	    @ApiResponse(code = 400, message = "Bad request due to decoding the data"),
	    @ApiResponse(code = 412, message = "Pre condition failed due to required data not found") })

	@RequestMapping(method = RequestMethod.POST,value = "/create_Check_List_Maintenance_Master" ,headers="Accept=application/json")
    @ResponseBody
	public Check_List_Maintenance_Master create_Check_List_Maintenance_Master(@RequestBody Check_List_Maintenance_Master the_Check_List_Maintenance_Master) throws Exception {

		Check_List_Maintenance_Master a_Check_List_Maintenance_Master;

		a_Check_List_Maintenance_Master = Check_List_Maintenance_Master_Default_Activity_service.create_check_list_maintenance_master(the_Check_List_Maintenance_Master, super.getUser());

		return a_Check_List_Maintenance_Master;

	}

	//auths not ready at this time


	@ApiOperation(value = "/update_Check_List_Maintenance_Master", httpMethod = "PUT",
	notes = "updates a noun of Check_List_Maintenance_Master", 
	response = Check_List_Maintenance_Master.class)
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The request was fulfilled"),
	    @ApiResponse(code = 404, message = "The server has not found anything matching the URI given"),
	    @ApiResponse(code = 500, message = "Internal server error due to encoding the data"),
	    @ApiResponse(code = 400, message = "Bad request due to decoding the data"),
	    @ApiResponse(code = 412, message = "Pre condition failed due to required data not found") })

	@RequestMapping(method = RequestMethod.PUT,value = "/update_Check_List_Maintenance_Master" ,headers="Accept=application/json")
    @ResponseBody
	public Check_List_Maintenance_Master update_Check_List_Maintenance_Master(@RequestBody Check_List_Maintenance_Master the_Check_List_Maintenance_Master) throws Exception {

		Check_List_Maintenance_Master a_Check_List_Maintenance_Master;

		a_Check_List_Maintenance_Master = Check_List_Maintenance_Master_Default_Activity_service.update_check_list_maintenance_master(the_Check_List_Maintenance_Master, super.getUser());

		return a_Check_List_Maintenance_Master;

	}

	//auths not ready at this time


	@ApiOperation(value = "/search_for_update_Check_List_Maintenance_Master/{Check_List_Maintenance_Master_id}", httpMethod = "GET",
	notes = "updates a noun of Check_List_Maintenance_Master", 
	response = Check_List_Maintenance_Master.class)
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The request was fulfilled"),
	    @ApiResponse(code = 404, message = "The server has not found anything matching the URI given"),
	    @ApiResponse(code = 500, message = "Internal server error due to encoding the data"),
	    @ApiResponse(code = 400, message = "Bad request due to decoding the data"),
	    @ApiResponse(code = 412, message = "Pre condition failed due to required data not found") })

	@RequestMapping(method = RequestMethod.GET,value = "/search_for_update_Check_List_Maintenance_Master/{Check_List_Maintenance_Master_id}" ,headers="Accept=application/json")
    @ResponseBody
	public Check_List_Maintenance_Master search_for_update_Check_List_Maintenance_Master(@PathVariable("Check_List_Maintenance_Master_id")long Check_List_Maintenance_Master_id) throws Exception {

		Check_List_Maintenance_Master the_Check_List_Maintenance_Master = new Check_List_Maintenance_Master();

		the_Check_List_Maintenance_Master = Check_List_Maintenance_Master_Default_Activity_service.check_list_maintenance_master_search_for_update(Check_List_Maintenance_Master_id, super.getUser());

		return the_Check_List_Maintenance_Master;

	}

	//auths not ready at this time


	@ApiOperation(value = "/delete_Check_List_Maintenance_Master/{Check_List_Maintenance_Master_id}", httpMethod = "DELETE",
	notes = "deletes a noun of Check_List_Maintenance_Master", 
	response = Check_List_Maintenance_Master.class)
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The request was fulfilled"),
	    @ApiResponse(code = 404, message = "The server has not found anything matching the URI given"),
	    @ApiResponse(code = 500, message = "Internal server error due to encoding the data"),
	    @ApiResponse(code = 400, message = "Bad request due to decoding the data"),
	    @ApiResponse(code = 412, message = "Pre condition failed due to required data not found") })

	@RequestMapping(method = RequestMethod.DELETE,value = "/delete_Check_List_Maintenance_Master/{Check_List_Maintenance_Master_id}" ,headers="Accept=application/json")
    @ResponseBody
	public String  delete_Check_List_Maintenance_Master(@PathVariable("Check_List_Maintenance_Master_id")long Check_List_Maintenance_Master_id) throws Exception {

		String service_return_msg = "";

		service_return_msg = Check_List_Maintenance_Master_Default_Activity_service.delete_check_list_maintenance_master(Check_List_Maintenance_Master_id, super.getUser());

		return service_return_msg;

	}

	//auths not ready at this time


	@ApiOperation(value = "/get_all_Check_List_Maintenance_Master", httpMethod = "GET",
	notes = "special search that gets all values of Check_List_Maintenance_Master", 
	response = Check_List_Maintenance_Master.class)
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "The request was fulfilled"),
	    @ApiResponse(code = 404, message = "The server has not found anything matching the URI given"),
	    @ApiResponse(code = 500, message = "Internal server error due to encoding the data"),
	    @ApiResponse(code = 400, message = "Bad request due to decoding the data"),
	    @ApiResponse(code = 412, message = "Pre condition failed due to required data not found") })

	@RequestMapping(method = RequestMethod.GET,value = "/get_all_Check_List_Maintenance_Master" ,headers="Accept=application/json")
    @ResponseBody
	public ArrayList<Check_List_Maintenance_Master> get_all_Check_List_Maintenance_Master() throws Exception {

		ArrayList<Check_List_Maintenance_Master> Check_List_Maintenance_Master_list = new ArrayList<Check_List_Maintenance_Master>();

		Check_List_Maintenance_Master_list = Check_List_Maintenance_Master_Default_Activity_service.get_all_check_list_maintenance_master();

		return Check_List_Maintenance_Master_list;

	}




}